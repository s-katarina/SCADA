//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RTU.PubSubService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PubSubService.IPub")]
    public interface IPub {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPub/DoWork")]
        void DoWork(string IOAdress, double value);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPub/DoWork")]
        System.Threading.Tasks.Task DoWorkAsync(string IOAdress, double value);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPub/SendDigitalInput")]
        void SendDigitalInput(string IOAdress, bool value);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPub/SendDigitalInput")]
        System.Threading.Tasks.Task SendDigitalInputAsync(string IOAdress, bool value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPubChannel : RTU.PubSubService.IPub, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PubClient : System.ServiceModel.ClientBase<RTU.PubSubService.IPub>, RTU.PubSubService.IPub {
        
        public PubClient() {
        }
        
        public PubClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PubClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PubClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PubClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork(string IOAdress, double value) {
            base.Channel.DoWork(IOAdress, value);
        }
        
        public System.Threading.Tasks.Task DoWorkAsync(string IOAdress, double value) {
            return base.Channel.DoWorkAsync(IOAdress, value);
        }
        
        public void SendDigitalInput(string IOAdress, bool value) {
            base.Channel.SendDigitalInput(IOAdress, value);
        }
        
        public System.Threading.Tasks.Task SendDigitalInputAsync(string IOAdress, bool value) {
            return base.Channel.SendDigitalInputAsync(IOAdress, value);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PubSubService.ISub", CallbackContract=typeof(RTU.PubSubService.ISubCallback))]
    public interface ISub {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISub/InitSub")]
        void InitSub();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISub/InitSub")]
        System.Threading.Tasks.Task InitSubAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISub/MessageArrived")]
        void MessageArrived(System.Collections.Generic.Dictionary<string, double> current);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubChannel : RTU.PubSubService.ISub, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubClient : System.ServiceModel.DuplexClientBase<RTU.PubSubService.ISub>, RTU.PubSubService.ISub {
        
        public SubClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SubClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SubClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SubClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SubClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void InitSub() {
            base.Channel.InitSub();
        }
        
        public System.Threading.Tasks.Task InitSubAsync() {
            return base.Channel.InitSubAsync();
        }
    }
}
